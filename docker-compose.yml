version: '3.8'

services:
  db:
    image: postgres:15
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  redis:
    image: redis:alpine
    container_name: redis
    restart: always

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    restart: always

  web:
    build: .
    container_name: django_blogs
    env_file:
      - .env
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/uploads
    command: python manage.py runserver 0.0.0.0:8000
    # command: gunicorn django_blogs.wsgi:application --bind 0.0.0.0:8000 # FOR PRODUCTION
    depends_on:
      - db
      - redis
      - rabbitmq
    expose:
      - "8000"

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - static_volume:/app/staticfiles
      - media_volume:/app/uploads
    depends_on:
      - web
    
  worker:
    build: .
    container_name: celery_worker
    command: celery -A django_blogs worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - web
      - rabbitmq
    env_file:
      - .env

volumes:
  static_volume:
  media_volume:
  postgres_data:
